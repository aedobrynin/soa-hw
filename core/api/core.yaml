openapi: 3.1.0
info:
    title: Core service API
    version: 1.0.0

paths:
    /v1/auth:
        post:
            summary: Authentificate user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                password:
                                    type: string
                            required:
                              - login
                              - password
            responses:
                '200':
                    description: |
                        OK. The session is returned in a cookie named `X_SESSION`
                        You need to include this cookie in subsequent requests.
                    headers: # TODO: use refresh token too
                        Set-Cookie:
                            schema:
                                type: string
                                example: X_SESSION=example; Path=/
                '401':
                    description: Bad credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/users:
        post:
            description: Register new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                password:
                                    type: string
                                    minLength: 10
                                    maxLength: 255
                                name:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                surname:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                email:
                                    type: string
                                    minLength: 1
                                    maxLength: 50
                                phone:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                            required:
                              - login
                              - password
            responses:
                '200':
                    description: OK
                '422':
                    description: User data didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
    /v1/users/{user_id}:
        patch:
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
              - name: user_id
                in: path
                description: User ID
                required: true
                schema:
                    type: string
                    format: uuid
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                surname:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                email:
                                    type: string
                                    minLength: 1
                                    maxLength: 50
                                phone:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '422':
                    description: Some field didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/posts:
        post:
            description: create new post
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    minLength: 1
                            required:
                              - content
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '422':
                    description: content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/posts/{post_id}:
        get:
            description: get post
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
              - name: post_id
                in: path
                description: Post ID
                required: true
                schema:
                    type: string
                    format: uuid
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Post'
                '401':
                    description: Unathorized
                '404':
                    description: Post not found
                '422':
                    description: content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

        patch:
            description: edit post
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
              - name: post_id
                in: path
                description: Post ID
                required: true
                schema:
                    type: string
                    format: uuid
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    minLength: 1
                            required:
                              - content
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '403':
                    description: Forbidden # Only author of the post can edit it
                '404':
                    description: Post not found
                '422':
                    description: new_content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

        delete:
            description: delete post
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
              - name: post_id
                in: path
                description: Post ID
                required: true
                schema:
                    type: string
                    format: uuid
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '403':
                    description: Forbidden # Only author of the post can delete it
                '404':
                    description: Post not found

  # TODO: better pagination
    /v1/posts/list:
        post:
            description: list posts
            parameters:
        # TODO: use refresh token too
              - in: cookie
                name: X_SESSION
                schema:
                    type: string
                required: true
              - in: query
                name: page_size
                schema:
                    type: integer
                default: 5
                required: true
              - in: query
                name: page_token
                schema:
                    type: string
                required: false
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    posts:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Post'
                                    next_page_token:
                                        type: string
                                required:
                                  - posts
                                  - next_page_token
                '401':
                    description: Unathorized
                '422':
                    description: request didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

components:
    schemas:
        ErrorMessage:
            type: object
            properties:
                error:
                    type: string
            required:
              - error

        Post:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                content:
                    type: string
                author_id:
                    type: string
                    format: uuid
            required:
              - id
              - content
              - author_id
