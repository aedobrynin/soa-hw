openapi: 3.1.0
info:
    title: Core service API
    version: 1.0.0

paths:
    /v1/auth:
        post:
            summary: Authentificate user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                password:
                                    type: string
                            required:
                                - login
                                - password
            responses:
                '200':
                    description: |
                        OK. The session is returned in a cookie named `X_SESSION`
                        You need to include this cookie in subsequent requests.
                    headers: # TODO: use refresh token too
                        Set-Cookie:
                            schema:
                                type: string
                                example: X_SESSION=example; Path=/
                '401':
                    description: Bad credentials
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/users:
        post:
            description: Register new user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                password:
                                    type: string
                                    minLength: 10
                                    maxLength: 255
                                name:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                surname:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                email:
                                    type: string
                                    minLength: 1
                                    maxLength: 50
                                phone:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                            required:
                                - login
                                - password
            responses:
                '200':
                    description: OK
                '422':
                    description: User data didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'
    /v1/users/{user_id}:
        patch:
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: user_id
                  in: path
                  description: User ID
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                surname:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
                                email:
                                    type: string
                                    minLength: 1
                                    maxLength: 50
                                phone:
                                    type: string
                                    minLength: 1
                                    maxLength: 25
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '422':
                    description: Some field didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/users/top:
        get:
            description: get top 3 users by likes count
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    top:
                                        type: array
                                        maxItems: 3
                                        items:
                                            $ref: '#/components/schemas/UserInTop'
                                required:
                                    - top
                '401':
                    description: Unathorized

    /v1/posts:
        post:
            description: create new post
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    minLength: 1
                            required:
                                - content
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    post_id:
                                        type: string
                                required:
                                    - post_id
                '401':
                    description: Unathorized
                '422':
                    description: content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/posts/{post_id}:
        get:
            description: get post
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Post'
                '401':
                    description: Unathorized
                '404':
                    description: Post not found
                '422':
                    description: content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

        patch:
            description: edit post
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
                                    minLength: 1
                            required:
                                - content
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '403':
                    description: Forbidden # Only author of the post can edit it
                '404':
                    description: Post not found
                '422':
                    description: new_content didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

        delete:
            description: delete post
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '403':
                    description: Forbidden # Only author of the post can delete it
                '404':
                    description: Post not found

    /v1/posts/{post_id}/mark_liked:
        post:
            description: mark post as liked
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '404':
                    description: Post not found

    /v1/posts/{post_id}/mark_viewed:
        post:
            description: mark post as viewed
            parameters:
                # TODO: use refresh token too
                - name: X_SESSION
                  in: cookie
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                '401':
                    description: Unathorized
                '404':
                    description: Post not found

    /v1/posts/{post_id}/stats:
        get:
            description: get post stats
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - name: post_id
                  in: path
                  description: Post ID
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostStatistics'

                '401':
                    description: Unathorized
                '404':
                    description: Post not found

    # TODO: better pagination
    /v1/posts/list:
        post:
            description: list posts
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - in: query
                  name: page_size
                  schema:
                      type: integer
                  default: 5
                  required: true
                - in: query
                  name: page_token
                  schema:
                      type: string
                  required: false
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    posts:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Post'
                                    next_page_token:
                                        type: string
                                required:
                                    - posts
                                    - next_page_token
                '401':
                    description: Unathorized
                '422':
                    description: request didn't meet the requirements
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorMessage'

    /v1/posts/top:
        get:
            description: get top 5 posts
            parameters:
                # TODO: use refresh token too
                - in: cookie
                  name: X_SESSION
                  schema:
                      type: string
                  required: true
                - in: query
                  name: order_by
                  schema:
                      type: string
                      enum:
                          - likes_count
                          - views_count
                  default: likes_count
                  required: true
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    top:
                                        type: array
                                        maxItems: 5
                                        items:
                                            description: |
                                                If order_by == likes_count, likes_count will be filled,
                                                views_count will be filled otherwise.
                                            $ref: '#/components/schemas/PostInTop'
                                required:
                                    - top
                '401':
                    description: Unathorized

components:
    schemas:
        ErrorMessage:
            type: object
            properties:
                error:
                    type: string
            required:
                - error

        PostID:
            type: string

        Post:
            type: object
            properties:
                id:
                    $ref: '#/components/schemas/PostID'
                content:
                    type: string
                author_id:
                    type: string
            required:
                - id
                - content
                - author_id

        PostStatistics:
            type: object
            properties:
                post_id:
                    $ref: '#/components/schemas/PostID'
                views_count:
                    type: integer
                    format: uint64
                likes_count:
                    type: integer
                    format: uint64
            required:
                - post_id

        PostInTop:
            type: object
            properties:
                post_id:
                    $ref: '#/components/schemas/PostID'
                author_login:
                    type: string
                views_count:
                    type: integer
                    format: uint64
                likes_count:
                    type: integer
                    format: uint64
            required:
                - post_id
                - author_login

        UserInTop:
            type: object
            properties:
                user_login:
                    type: string
                likes_count:
                    type: integer
                    format: uint64
            required:
                - user_login
                - likes_count
